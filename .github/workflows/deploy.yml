name: Build and Deploy

on:
  push:
    branches:
      - deploybranch

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
  SERVER_PRIVATE_KEY: ${{ secrets.SERVER_PRIVATE_KEY }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_NAME: ${{ secrets.DB_NAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Prepare known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ env.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: SSH into the server
        uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.SERVER_PRIVATE_KEY }}

      - name: Run database migration
        run: |
          ssh ${{ env.SERVER_USERNAME }}@${{ env.SERVER_HOST }} \
            cd /path/to/repository && \
            ./migrations/migrate.sh \
              --host=${{ env.DB_HOST }} \
              --port=${{ env.DB_PORT }} \
              --username=${{ env.DB_USERNAME }} \
              --password=${{ env.DB_PASSWORD }} \
              --database=${{ env.DB_NAME }}
      
      - name: Pull Docker image on the server
        run: |
          ssh ${{ env.SERVER_USERNAME }}@${{ env.SERVER_HOST }} \
            docker pull ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Run Docker container on the server
        run: |
          ssh ${{ env.SERVER_USERNAME }}@${{ env.SERVER_HOST }} \
            docker  stop ${{ env.CONTAINER_NAME }} | true \
            docker rm ${{ env.CONTAINER_NAME }} || true \
            docker run -d --name ${{ env.CONTAINER_NAME }} -p 8000:8000 ${{ env.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
